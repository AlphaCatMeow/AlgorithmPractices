# 描述
#               1
#           1   1   1
#       1   2   3   2   1
#    1  3   6   7   6   3   1
# 1  4  10  16  19  16  10  4  1

# 以上三角形的数阵，第一行只有一个数1，以下每行的每个数，是恰好是它上面的数、左上角数和右上角的数，3个数之和（如果不存在某个数，认为该数就是0）。
# 求第n行第一个偶数出现的位置。如果没有偶数，则输出-1。例如输入3,则输出2，输入4则输出3，输入2则输出-1。

# 数据范围： 1 ≤ n ≤ 10**9

# 输入描述：
# 输入一个int整数

# 输出描述：
# 输出返回的int值

# 解法1：
# import sys

# alt = [2, 3, 2, 4]  # 发现规律，从第三行开始2324循环
# for line in sys.stdin:
#     n = int(line.strip())
#     if n < 3:
#         print(-1)
#     if n >= 3:
#         print(alt[(n - 3) % 4])  # 所以对4求余，映射到上面alt列表中

# 思路：
# 题目的关键点在于找规律，如下代码可以打印出从第三行开始的奇数和偶数的规律（0表示偶数，1表示奇数）
def func(n):
    odd = [1, 1, 1]
    for i in range(3, n+1):
        odd = [1, odd[0] ^ odd[1]] + [odd[j] ^ odd[j+1] ^ odd[j+2]
                                      for j in range(len(odd) - 2)] + [odd[-2] ^ odd[-1], 1]
        print(odd)
    return odd.index(0) if 0 in odd else -1


"""
func(100)
[1, 0, 1, 0, 1]
[1, 1, 0, 1, 0, 1, 1]
[1, 0, 0, 0, 1, 0, 0, 0, 1]
[1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1]
[1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1]
[1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1]
[1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1]
[1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1]
[1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1]
[1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1]
[1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1]
"""
# 经过观察发现每4行偶数出现的位置就会循环一次（位置分别是[2, 3, 2, 4])
while True:
    try:
        n = int(input())
        if n == 1 or n == 2:
            print(-1)
            continue
        n -= 3
        n %= 4
        res = [2, 3, 2, 4]
        print(res[n])
    except EOFError:
        break
