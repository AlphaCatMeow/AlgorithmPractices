"""
描述
给定一个仅包含小写字母的字符串，求它的最长回文子串的长度。
所谓回文串，指左右对称的字符串。
所谓子串，指一个字符串删掉其部分前缀和后缀（也可以不删）的字符串

数据范围：字符串长度1 ≤ s ≤ 350 
进阶：时间复杂度：O(n)，空间复杂度：O(n)

输入描述：
输入一个仅包含小写字母的字符串

输出描述：
返回最长回文子串的长度
"""

"""
思路：
1. 抽丝剥茧
这是一道非常基础的问题，也是每一个学习编程的人都回避不了的问题。
对于第一次接触这个问题的学习者，可以对问题作如下理解：
回文：即是要求子串本身是对称的；
最长：即是要求在所有子串中找到符合要求的。
2. 化繁为简
根据上一部分的分析，我们可以很容易的想到暴力的解法：在每一个位置检查所有的合法的长度的子串是否是对称的。
"""

while True:
    try:
        s = input()
        res = []

        for i in range(len(s)):
            for j in range(i + len(res), len(s) + 1):
                if s[i:j] == s[i:j][::-1]:
                    res.append(j - i)
        if res != "":
            print(max(res))
    except:
        break
